AWS CloudFormation Notes
jettyserver.template - copied over tileservers.template
- Need ELB, ASG, S3 (deployment .jars, tiles) and Internet access
- Comparing with tileservers.template, ingest.template
- Also compare: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/example-templates-autoscaling.html#example-templates-autoscaling-description

(Possible) changes:
- Parameters: 
   DeployMEntArtifactsBucketName: 
      Changed description
      Changed default to "advanced-analytics-deployment"
   TileBucketName
      Changed default to "advanced-analytics-geo-tile-images"
   Kept MetadataTableName, VpcId, Subnets, KeyName, InstanceType, SSHLocation as-is
      Probably need to change the actual string IDs, etc. for these?
   Keep DynamoDB stuff? (which is used for metadata table?)
   Delete ephemeral storage stuff (os it that also needed for cache?)
   What to put for VpcId, Subnets
- Mappings kept as-is
- WebservicesELBSecurityGroup:
   Keep same for now?
- WebServicesELB
   Keep same for now?
- IAM stuff
   Not in Amazon example - still needed?
   Keep for now?
- WebServerSecurityGroup
   Keep same for now?
- WebServerLaunchConfig
   "Packages" - use Apache JSVC, not tomcat
   ephemeral files kept for now (delete if unneeded?)
   Changed to jetty.jar - gets jetty.jar from deployment bucket
      Assuming that will be the name of the jar in the bucket
      Changed owner and group from "tomcat" to "root" (since imageingest used JSVC and did this)
   TODO? get rid of geowebcache/ephemeral stuff
   Added etc/init.d/jetty (based off ingest template)       
      Gets jetty.tpl from deployment bucket
      Got rid of IngestQueue - keep TileBucketName, MetadataTopicName?
   "Services" - changed "tomcat8" from tileserver, to "jetty"
      ingest.template had etc/init.d/imageingest, put "imageingest" under services
      So put "jetty" under services - match etc/init.d/jetty
   cfn-hup.conf, cfn-auto-reloader.conf
      Look mostly same as Amazon example, so keep as-is
- WebServerASG
   Keep same for now?
- WebServerScaleUpPolicy
   Same as Amazon example
- WebServerScaleDownPolicy
   Not in Amazon example - still needed?
   Keep for now?
- CPUAlarmHigh, CPUAlarmLow 
   Same as Amazon examples
- Outputs mostly the same as Amazon example


** What is a .tpl file?
   Template file 
   ingest.template uses "imageingest" in service (using jsvc, which is what jettyserver needs to do)
      imageingest = a file, from deployment - imageingest.tpl
   imageingest stored as "/etc/init.d/imageingest"
   init.d = folders with daemon init scripts (bash shell script to launch daemon)


Daemon/JSVC
http://www.neilson.co.za/creating-a-java-daemon-system-service-for-debian-using-apache-commons-jsvc/ 
Need to:
- Implement Daemon interface (like SQSEventMonitorDaemon.java)
- Install JSVC (CloudFormation should do that?)
- Bash shell script - launch daemon --> control start, stop, restart, reload, status, etc.
   This is what the imageingest.tpl file (and jetty.tpl) is for

Created JettyDaemon class
- Moved main method from running Jetty server (is this correct location? Maybe call JettyServer class's main())
- Possible TODO: Move things around to init(), start(), etc.
- (i.e. get bucketname argument, instead of hardcoding bucket name?)

Created jetty.tpl
- Copied over ingest.tpl
- Changed #  /etc/init.d/imageingest to #  /etc/init.d/jetty
- Changed Name, Desc, INIT INFO to match jetty
- Kept EXEC, FILE_PATH, JAVA_HOME
- Classpath: changed from image-ingest.jar to CLASS_PATH="$FILE_PATH/bin/jetty.jar"
- Class: changed to CLASS="com.leidoslabs.abs.imaging.JettyDaemon"
- Args: Only taking in TileBucketName --> use as parameter in jettyserver.template

****Try out making stack from CF template in CF console on AWS!!
Don't bother with caching for now - so take out ephemeral storage?
 - Commented out tilecache parameter for JettyServer/JettyDaemon.java, adding/checking cache in S3Handler.java