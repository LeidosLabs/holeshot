# You should increase TCP buffer sizes to at least 16MB for 10G paths and tune 
# the auto-tuning (keep in mind that you need to consider buffer bloat).
net.core.rmem_max=16777216
net.core.wmem_max=16777216
net.ipv4.tcp_rmem="4096 87380 16777216"
net.ipv4.tcp_wmem="4096 16384 16777216"


# net.core.somaxconn controls the size of the connection listening queue. 
# The default value is 128. If you are running a high-volume server and 
# connections are getting refused at a TCP level, you need to increase this 
# value. This setting can take a bit of finesse to get correct: if you set it 
# too high, resource problems occur as it tries to notify a server of a large 
# number of connections, and many remain pending, but if you set it too low, 
# refused connections occur.
net.core.somaxconn=4096

# The net.core.netdev_max_backlog controls the size of the incoming packet 
# queue for upper-layer (Java) processing. The default (2048) may be increased 
# and other related parameters adjusted with:
net.core.netdev_max_backlog=16384
net.ipv4.tcp_max_syn_backlog=8192
net.ipv4.tcp_syncookies=1


# If many outgoing connections are made (for example, on load generators), 
# the operating system might run low on ports. Thus it is best to increase 
# the port range, and allow reuse of sockets in TIME_WAIT:
net.ipv4.ip_local_port_range="1024 65535"
net.ipv4.tcp_tw_recycle=1

# Set cubic congestion control
net.ipv4.tcp_congestion_control=cubic