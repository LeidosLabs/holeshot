{
    "Parameters": {
        "StackSuffix": {
            "Type": "String"
        },
        "SecurityGroups": {
            "Type": "CommaDelimitedList"
        },
        "Subnet": {
            "Type": "CommaDelimitedList"
        },
        "ElasticsearchEndpoint": {
            "Description": "The Elasticsearch to insert documents into",
            "Type": "String"
        },
        "S3DeploymentBucket": {
            "Description": "The bucket that contains deployment artifacts",
            "Type": "String"
        }
    },
    "Resources": {
        "IngestRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "AADev-MetadataIngestRole-${StackSuffix}"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "SNSLambdaPolicy-${StackSuffix}"
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DetachNetworkInterface",
                                        "ec2:DeleteNetworkInterface",
                                        "sns:ListTopics",
                                        "sns:GetPlatformApplicationAttributes",
                                        "sns:Unsubscribe",
                                        "sns:GetSubscriptionAttributes",
                                        "sns:ListSubscriptions",
                                        "sns:CheckIfPhoneNumberIsOptedOut",
                                        "ec2:CreateNetworkInterface",
                                        "sns:ListEndpointsByPlatformApplication",
                                        "sns:ListPhoneNumbersOptedOut",
                                        "sns:GetEndpointAttributes",
                                        "sns:SetSubscriptionAttributes",
                                        "ec2:DescribeNetworkInterfaces",
                                        "sns:GetSMSAttributes",
                                        "sns:ListPlatformApplications",
                                        "sns:ListSubscriptionsByTopic",
                                        "sns:GetTopicAttributes",
                                        "sns:Subscribe",
                                        "sns:ConfirmSubscription",
                                        "logs:*",
                                        "s3:PutObject"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ],
                "PermissionsBoundary": "arn:aws:iam::555555555555:policy/DeveloperPolicy"
            }
        },
        "IngestImageMetadata": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": {
                    "Fn::Sub": "GetImageMetadata-${StackSuffix}"
                },
                "Code": {
                    "S3Bucket": {
                        "Ref": "S3DeploymentBucket"
                    },
                    "S3Key": {
                        "Fn::Sub": "${StackSuffix}/catalog/image-catalog-ingest.zip"
                    }
                },
                "Handler": "ingest.handle_metadata",
                "Runtime": "python3.6",
                "Description": "Transform metadata output of tileserver and insert into elasticsearch",
                "MemorySize": 128,
                "Timeout": 15,
                "Role": {
                    "Fn::GetAtt": [
                        "IngestRole",
                        "Arn"
                    ]
                },
                "VpcConfig": {
                    "SecurityGroupIds": {
                        "Ref": "SecurityGroups"
                    },
                    "SubnetIds": {
                        "Ref": "Subnet"
                    }
                },
                "Environment": {
                    "Variables": {
                        "es_endpoint": {
                            "Ref": "ElasticsearchEndpoint"
                        },
                        "tileserver_url": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "tileserver-${StackSuffix}:TileServerURL"
                            }
                        },
                        "s3_backup_bucket": {
                            "Ref": "S3BackupBucket"
                        }
                    }
                }
            }
        },
        "LambdaResourcePolicy": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "IngestImageMetadata"
                },
                "Principal": "sns.amazonaws.com",
                "Action": "lambda:InvokeFunction",
                "SourceArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${StackSuffix}:MetadataTopicArn"
                }
            }
            }
        },
        "IngestSNSSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Endpoint": {
                    "Fn::GetAtt": [
                        "IngestImageMetadata",
                        "Arn"
                    ]
                },
                "Protocol": "lambda",
                "TopicArn": {
                    "Fn::ImportValue": {
                        "Fn::Sub": "${StackSuffix}:MetadataTopicArn"
                    }
                }
            }
        },
        "S3BackupBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": { "Fn::Sub": "advanced-analytics-image-metadata-backup-${StackSuffix}" },
            }
        }
    }
}